--食材
CREATE TABLE FOOD (
       ID    VARCHAR2(32) NOT NULL,
       NAME  VARCHAR2(50),
       TYPE  VARCHAR2(3),
       PICTURE  BLOB,
       NUM  NUMBER(5),
       UNIT  VARCHAR2(2),
       SHELF_LIFE  NUMBER(3),
       PURCHASE_DATE  DATE,
       LAST_EDIT_DATE    DATE,
       REMARK            VARCHAR2(200),
       PRIMARY KEY (ID)
)
COMMENT ON COLUMN FOOD.ID IS '主键ID';
COMMENT ON COLUMN FOOD.NAME IS '食材名称';
COMMENT ON COLUMN FOOD.TYPE IS '分类';
COMMENT ON COLUMN FOOD.PICTURE IS '图片';
COMMENT ON COLUMN FOOD.NUM IS '数量';
COMMENT ON COLUMN FOOD.UNIT IS '单位';
COMMENT ON COLUMN FOOD.SHELF_LIFE IS '保质期';
COMMENT ON COLUMN FOOD.PURCHASE_DATE IS '采购日期';
COMMENT ON COLUMN FOOD.CREATE_DATE IS '创建日期';
COMMENT ON COLUMN FOOD.REMARK IS '备注';
--食谱
CREATE TABLE RECIPE (
       ID    VARCHAR2(32) NOT NULL,
       NAME  VARCHAR2(50),
       TYPE  VARCHAR2(3),
       PICTURE  BLOB,
       STEP  CLOB,
       CREATE_DATE    DATE,
       REMARK            VARCHAR2(200),
       PRIMARY KEY (ID)
)
COMMENT ON COLUMN RECIPE.ID IS '主键ID';
COMMENT ON COLUMN RECIPE.NAME IS '食谱名称';
COMMENT ON COLUMN RECIPE.TYPE IS '分类';
COMMENT ON COLUMN RECIPE.PICTURE IS '图片';
COMMENT ON COLUMN RECIPE.STEP IS '做法步骤';
COMMENT ON COLUMN RECIPE.CREATE_DATE IS '创建日期';
COMMENT ON COLUMN RECIPE.REMARK IS '备注';
--食材食谱关系表
CREATE TABLE FOOD_RECIPE (
       FOOD_ID    VARCHAR2(32) NOT NULL,
       RECIPE_ID  VARCHAR2(50) NOT NULL,
       PRIMARY KEY (FOOD_ID,RECIPE_ID)
)
COMMENT ON COLUMN FOOD_RECIPE.FOOD_ID IS '食材ID';
COMMENT ON COLUMN FOOD_RECIPE.RECIPE_ID IS '食谱ID';
--分类
CREATE TABLE TYPE_DICTIONARY (
       ID    VARCHAR2(3) NOT NULL,
       NAME  VARCHAR2(50),
       TYPE  VARCHAR(1)
       CREATE_DATE    DATE,
       PRIMARY KEY (ID)
);
COMMENT ON COLUMN TYPE_DICTIONARY.ID IS '主键ID';
COMMENT ON COLUMN TYPE_DICTIONARY.NAME IS '名称';
COMMENT ON COLUMN TYPE_DICTIONARY.TYPE IS '类型，0:食材;1:食谱';
COMMENT ON COLUMN TYPE_DICTIONARY.CREATE_DATE IS '创建日期';
--外键
ALTER TABLE FOOD 
   ADD FOREIGN KEY (TYPE) REFERENCES TYPE_DICTIONARY (ID);
ALTER TABLE RECIPE 
   ADD FOREIGN KEY (TYPE) REFERENCES TYPE_DICTIONARY (ID);
